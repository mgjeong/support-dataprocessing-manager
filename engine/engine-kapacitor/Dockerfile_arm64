FROM armhf/golang:1.8-alpine AS buildenv 

# SEC-specific settings KYUNGRAE KIM
COPY docker_files/resources/qemu-arm-static /usr/bin
RUN update-ca-certificates

# Starting to build docker image
RUN apk add --no-cache bash

# Installing packages for EMF
RUN apk update
RUN apk add gcc pkgconfig zeromq-dev
RUN apk add git musl-dev
RUN go get github.com/pebbe/zmq4
RUN go get -u github.com/golang/protobuf/protoc-gen-go
COPY docker_files/resources/src/go.uber.org ${GOPATH}/src/go.uber.org
RUN go build go.uber.org/zap
RUN go install go.uber.org/zap

RUN go get github.com/mgjeong/messaging-zmq/go/emf
ENV UDF_PATH /runtime/ha/go
ENV KAPA_PATH /kapacitor
ENV PATH $PATH:$KAPA_PATH

RUN go get -u -v github.com/influxdata/kapacitor/udf/agent
RUN mkdir -p $UDF_PATH

ADD src/deliver $GOPATH/src/deliver
ADD src/inject $GOPATH/src/inject
RUN ls $GOPATH/src/
WORKDIR $GOPATH
COPY docker_files/resources/setldd.sh ./
RUN go build src/inject/inject.go
RUN go build src/deliver/deliver.go
RUN mkdir -p /dependencies
RUN ./setldd.sh inject /dependencies/
RUN ./setldd.sh deliver /dependencies/

FROM armhf/alpine
COPY docker_files/resources/qemu-arm-static /usr/bin

RUN apk add --no-cache bash

# Copy EMF-related libraries
COPY --from=buildenv /dependencies/* /dependencies/
RUN mv -f /dependencies/* /usr/lib/

# Set configurations
ENV UDF_PATH /runtime/ha/go
ENV KAPA_PATH /kapacitor
ENV PATH $PATH:$KAPA_PATH

RUN mkdir -p $UDF_PATH
RUN mkdir -p $KAPA_PATH

# Copy UDF binaries for EMF
COPY --from=buildenv /go/inject ${UDF_PATH}/
COPY --from=buildenv /go/deliver ${UDF_PATH}/

# ADD kapacitor binaries
ADD docker_files/resources/kapacitor/usr/bin/kapacitor $KAPA_PATH
ADD docker_files/resources/kapacitor/usr/bin/kapacitord $KAPA_PATH

ADD docker_files/resources/kapacitor.conf $KAPA_PATH/
EXPOSE 9092

# Start container at entrypoint
COPY run.sh /
ENTRYPOINT ["/run.sh"]
